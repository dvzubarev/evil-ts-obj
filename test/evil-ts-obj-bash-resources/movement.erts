Point-Char: @

Code:
  (lambda ()
    (evil-ts-obj-bash-tests-setup)
    (evil-ts-obj-next-sibling))

Name: Move to next sibling t1

=-=
if [[ -n@ "$send_mode" && move || "$A" == "$B" ]] ; then
    buffer=${buffer//\"/\\\"}
fi
=-=
if [[ -n "$send_mode" && @move || "$A" == "$B" ]] ; then
    buffer=${buffer//\"/\\\"}
fi
=-=-=

Name: Move to next sibling t2

=-=
if [[ -n "$send_mode" && @move || "$A" == "$B" ]] ; then
    buffer=${buffer//\"/\\\"}
fi
=-=
if [[ -n "$send_mode" && move || @"$A" == "$B" ]] ; then
    buffer=${buffer//\"/\\\"}
fi
=-=-=

Code:
  (lambda ()
    (evil-ts-obj-bash-tests-setup)
    (evil-ts-obj-previous-sibling))

Name: Move to prev sibling t1

=-=
if [[ -n "$send_mode" && move || @"$A" == "$B" ]] ; then
    buffer=${buffer//\"/\\\"}
fi
=-=
if [[ -n "$send_mode" && @move || "$A" == "$B" ]] ; then
    buffer=${buffer//\"/\\\"}
fi
=-=-=

Name: Move to prev sibling t2

=-=
if [[ -n "$send_mode" && @move || "$A" == "$B" ]] ; then
    buffer=${buffer//\"/\\\"}
fi
=-=
if [[ @-n "$send_mode" && move || "$A" == "$B" ]] ; then
    buffer=${buffer//\"/\\\"}
fi
=-=-=

Name: Move to prev sibling t3

=-=
call && echo || @exit
=-=
call && @echo || exit
=-=-=

Name: Move to prev sibling t4

=-=
call && @echo || exit
=-=
@call && echo || exit
=-=-=

Code:
  (lambda ()
    (evil-ts-obj-bash-tests-setup)
    (evil-ts-obj-end-of-thing))

Name: Move to end of thing t1

=-=
@if [[ true ]] ; then
    v=1
fi
=-=
if [[ true ]] ; then
    v=1
f@i
=-=-=

Name: Move to end of thing t2

=-=
if [[ true ]] ; then
    v=1
e@lif [[ -n "$s" ]]; then
    echo "$s"
fi
=-=
if [[ true ]] ; then
    v=1
elif [[ -n "$s" ]]; then
    echo "$s@"
fi
=-=-=

Name: Move to end of thing t3

=-=
if [[ true ]] ; then
    v=1
elif [[ -n "$s" ]]; then
    echo "$s@"
fi
=-=
if [[ true ]] ; then
    v=1
elif [[ -n "$s" ]]; then
    echo "$s"
f@i
=-=-=
